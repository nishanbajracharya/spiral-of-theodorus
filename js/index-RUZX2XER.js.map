{
  "version": 3,
  "sources": ["../../src/index.ts"],
  "sourcesContent": ["import 'normalize.css';\n\nimport './style.css';\n\nconst MIN = 1;\nconst MAX = 200;\n\nfunction clamp(value: number, min: number, max: number) {\n  return Math.min(Math.max(value, min), max);\n}\n\nfunction randomColor(alpha: number) {\n  return `rgba(${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, ${Math.floor(\n    Math.random() * 255\n  )}, ${alpha})`;\n}\n\nconst canvas = document.createElement('canvas');\nconst ctx = canvas.getContext('2d')!;\ncanvas.width = window.innerWidth - 10;\ncanvas.height = window.innerHeight - 10;\n\nconst app = document.querySelector('#app')!;\n\napp.appendChild(canvas);\n\nconst mouse = {\n  x: 0,\n  y: 0,\n};\n\nlet spiralCount = 16;\nlet size = 100;\n\nconst query = window.location.search;\nif (query) {\n  const params = new URLSearchParams(query);\n\n  const count = params.get('count');\n  if (count) {\n    const input = parseInt(count);\n    if (Number.isInteger(input) && input > 0) {\n      spiralCount = clamp(input, MIN, MAX);\n    }\n  }\n\n  const sizeParam = params.get('size');\n  if (sizeParam) {\n    const input = parseInt(sizeParam);\n    if (Number.isInteger(input) && input > 0) {\n      size = input;\n    }\n  }\n}\n\nconst countSlider = document.createElement('input');\ncountSlider.type = 'range';\napp.appendChild(countSlider);\n\ncountSlider.setAttribute('min', `${MIN}`);\ncountSlider.setAttribute('max', `${MAX}`);\ncountSlider.setAttribute('step', '1');\ncountSlider.value = `${spiralCount}`;\n\ncountSlider.oninput = () => {\n  spiralCount = parseInt(countSlider.value);\n};\n\nconst colors = Array(MAX)\n  .fill('')\n  .map(() => randomColor(0.5));\n\ncanvas.addEventListener('mousemove', (e) => {\n  e.clientX;\n  e.clientY;\n\n  mouse.x = e.clientX - canvas.offsetLeft;\n  mouse.y = e.clientY - canvas.offsetTop;\n});\n\n// Change size of spiral based on scroll wheel\ncanvas.addEventListener('wheel', changeSize);\n\nfunction changeSize(e: WheelEvent) {\n  const delta = Math.sign(e.deltaY);\n  size = clamp(size - delta, MIN, MAX);\n}\n\nfunction draw() {\n  ctx.reset();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n  // Recursively draw triangle\n  let angle = 0;\n  for (let i = 0; i < spiralCount; i++) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.strokeStyle = '#fff';\n    ctx.fillStyle = colors[i];\n    ctx.translate(canvas.width / 2, canvas.height / 2);\n    ctx.moveTo(0, 0);\n    ctx.rotate(angle);\n    ctx.lineTo(size * Math.sqrt(i + 1), 0);\n    ctx.lineTo(size * Math.sqrt(i + 1), -size);\n    ctx.lineTo(0, 0);\n    ctx.fill();\n    ctx.stroke();\n    ctx.closePath();\n    ctx.restore();\n    angle -= Math.acos(Math.sqrt(i + 1) / Math.sqrt(i + 2));\n  }\n\n  // Draw cursor\n  ctx.fillStyle = '#fff';\n  ctx.fillText(`(${mouse.x}, ${mouse.y})`, mouse.x, mouse.y);\n\n  requestAnimationFrame(draw);\n}\n\nrequestAnimationFrame(draw);\n"],
  "mappings": "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",
  "names": ["MIN", "MAX", "clamp", "value", "min", "max", "randomColor", "alpha", "canvas", "ctx", "app", "mouse", "spiralCount", "size", "query", "params", "count", "input", "sizeParam", "countSlider", "colors", "e", "changeSize", "delta", "draw", "angle", "i"]
}
